C test_1524

{ x = 0; }

void
P0(atomic_int *x)
{
    int r0 = 0;
    r0 = 2;
    atomic_compare_exchange_strong_explicit(x, &r0, 3, memory_order_acquire,
                                            memory_order_relaxed);
    if (r0 == 2) { *x = 1; }
}

void
P1(atomic_int *x)
{
    int r0 = 0;
    r0 = atomic_load_explicit(x, memory_order_relaxed);
    atomic_store_explicit(x, 2, memory_order_release);
}

forall
((0:r0 == 0 /\ 1:r0 == 0 /\ x == 2) \/ (0:r0 == 2 /\ 1:r0 == 0 /\ x == 1) \/
 (0:r0 == 2 /\ 1:r0 == 0 /\ x == 3))
