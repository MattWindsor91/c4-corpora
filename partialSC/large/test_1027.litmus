C test_1027

{ x = 0; }

void
P0(atomic_int *x)
{
    int r0 = 0;
    r0 = atomic_load_explicit(x, memory_order_acquire);
    if (r0 == 3) { *x = 4; }
}

void
P1(atomic_int *x)
{
    int r0 = 0;
    r0 = 2;
    atomic_compare_exchange_strong_explicit(x, &r0, 3, memory_order_release,
                                            memory_order_relaxed);
}

void
P2(atomic_int *x)
{
    int r0 = 0;
    r0 = 4;
    atomic_compare_exchange_strong_explicit(x, &r0, 1, memory_order_relaxed,
                                            memory_order_relaxed);
    atomic_store_explicit(x, 2, memory_order_release);
}

forall
((0:r0 == 0 /\ 1:r0 == 0 /\ 2:r0 == 0 /\ x == 2) \/
 (0:r0 == 0 /\ 1:r0 == 2 /\ 2:r0 == 0 /\ x == 3) \/
 (0:r0 == 2 /\ 1:r0 == 0 /\ 2:r0 == 0 /\ x == 2) \/
 (0:r0 == 2 /\ 1:r0 == 2 /\ 2:r0 == 0 /\ x == 3) \/
 (0:r0 == 3 /\ 1:r0 == 2 /\ 2:r0 == 0 /\ x == 3) \/
 (0:r0 == 3 /\ 1:r0 == 2 /\ 2:r0 == 0 /\ x == 4))
