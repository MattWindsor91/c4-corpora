C test_132

{ x = 0; }

void
P0(atomic_int *x)
{
    int r0 = 0;
    int r1 = 0;
    r1 = atomic_load_explicit(x, memory_order_relaxed);
    r0 = 0;
    atomic_compare_exchange_strong_explicit(x, &r0, 1, memory_order_relaxed,
                                            memory_order_relaxed);
}

void
P1(atomic_int *x)
{ atomic_store_explicit(x, 2, memory_order_relaxed); }

forall
((0:r0 == 0 /\ 0:r1 == 0 /\ x == 2) \/ (0:r0 == 2 /\ 0:r1 == 0 /\ x == 2) \/
 (0:r0 == 2 /\ 0:r1 == 2 /\ x == 2))
